diff --git a/LibOS/shim/test/fs/manifest.template b/LibOS/shim/test/fs/manifest.template
index ed0f109e..bcc0fe6d 100644
--- a/LibOS/shim/test/fs/manifest.template
+++ b/LibOS/shim/test/fs/manifest.template
@@ -48,3 +48,7 @@ sgx.protected_files = [
   "file:tmp/pf_input",
   "file:tmp/pf_output",
 ]
+
+sgx.protected_mrenclave_files = [
+  "file:protected",
+}
\ No newline at end of file
diff --git a/LibOS/shim/test/fs/meson.build b/LibOS/shim/test/fs/meson.build
index 0d064dbb..86108836 100644
--- a/LibOS/shim/test/fs/meson.build
+++ b/LibOS/shim/test/fs/meson.build
@@ -42,6 +42,7 @@ tests = {
     'open_close': {},
     'open_flags': {},
     'read_write': {},
+    'rename_pf': {},
     'seek_tell': {},
     'stat': {},
     'truncate': {},
diff --git a/LibOS/shim/test/fs/rename_pf.c b/LibOS/shim/test/fs/rename_pf.c
new file mode 100644
index 00000000..530e2d41
--- /dev/null
+++ b/LibOS/shim/test/fs/rename_pf.c
@@ -0,0 +1,21 @@
+#include <stdio.h>
+#include <stdlib.h>
+#define FILENAME "protected/data"
+
+int main(void) {
+    FILE* f;
+
+    if ((f = fopen(FILENAME, "wb")) == NULL) {
+        perror("first create failed");
+        exit(1);
+    }
+    if (fwrite("data", 1, 4, f) != 4) {
+        perror("first write failed");
+        fclose(f);
+        exit(1);
+    }
+    fclose(f);
+
+    rename(FILENAME, FILENAME ".bak");
+    return 0;
+}
\ No newline at end of file
diff --git a/LibOS/shim/test/fs/test_pf.py b/LibOS/shim/test/fs/test_pf.py
index 4449caaa..57689e0a 100644
--- a/LibOS/shim/test/fs/test_pf.py
+++ b/LibOS/shim/test/fs/test_pf.py
@@ -108,6 +108,12 @@ class TC_50_ProtectedFiles(test_fs.TC_00_FileSystem):
         stdout, stderr = self.run_binary(['open_flags', file_path])
         self.verify_open_flags(stdout, stderr)
 
+    @unittest.skipIf(os.environ.get('SGX') != '1', 'Checking renaming of protected files for SGX only')
+    def test_099_rename_pf(self):        
+        os.makedirs('protected', exist_ok=True)
+        stdout, stderr = self.run_binary(['rename_pf'])
+        self.assertIn('Renaming of protected files is not supported yet.', stderr)    
+    
     # overrides TC_00_FileSystem to change input dir (from plaintext to encrypted)
     def test_115_seek_tell(self):
         # the test binary expects a path to read-only (existing) file and two paths to files that
diff --git a/LibOS/shim/test/fs/tests.toml b/LibOS/shim/test/fs/tests.toml
index 03fe2d7c..906142af 100644
--- a/LibOS/shim/test/fs/tests.toml
+++ b/LibOS/shim/test/fs/tests.toml
@@ -13,6 +13,7 @@ manifests = [
   "open_close",
   "open_flags",
   "read_write",
+  "rename_pf",
   "seek_tell",
   "stat",
   "truncate",
