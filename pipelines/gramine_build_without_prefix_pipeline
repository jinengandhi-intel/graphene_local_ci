pipeline {
    agent
    {
        node {
                label 'master'
                customWorkspace "${env.JobPath}"
              }
    }
    stages
    {
        stage ('Parallel invocation of test jobs') {
            parallel {
                stage ('Invoke Ubuntu 20.04 with Kernel 6.2 Graphene SGX Suite') {
                    steps {
                        build job: 'local_ci_graphene_sgx_build_without_prefix', parameters: [[$class: 'StringParameterValue', name: 'base_os', value: 'ubuntu20.04'], [$class: 'NodeParameterValue', name: 'node_label', labels: ['graphene_18.04_6.0'], nodeEligibility: [$class: 'AllNodeEligibility']]], propagate: true, wait: true
                    }
                }

                stage ('Invoke Ubuntu 22.04 with Kernel 6.2 Graphene SGX Suite') {
                    steps {
                        build job: 'local_ci_graphene_sgx_build_without_prefix', parameters: [[$class: 'StringParameterValue', name: 'base_os', value: 'ubuntu22.04'], [$class: 'NodeParameterValue', name: 'node_label', labels: ['graphene_18.04_6.0'], nodeEligibility: [$class: 'AllNodeEligibility']]], propagate: true, wait: true
                    }
                }

                stage ('Invoke CentOS 8 with Kernel 6.2 Graphene SGX Suite') {
                    steps {
                        build job: 'local_ci_graphene_sgx_build_without_prefix', parameters: [[$class: 'StringParameterValue', name: 'base_os', value: 'centos8'], [$class: 'NodeParameterValue', name: 'node_label', labels: ['graphene_18.04_6.0'], nodeEligibility: [$class: 'AllNodeEligibility']]], propagate: true, wait: true
                    }
                }

                stage ('Invoke Debian 11 with Kernel 6.1 Graphene SGX Suite') {
                    steps {
                        build job: 'local_ci_graphene_sgx_build_without_prefix', parameters: [[$class: 'StringParameterValue', name: 'base_os', value: 'debian11'], [$class: 'NodeParameterValue', name: 'node_label', labels: ['graphene_18.04_6.0'], nodeEligibility: [$class: 'AllNodeEligibility']]], propagate: true, wait: true
                    }
                }
            }
        }
    }
}
