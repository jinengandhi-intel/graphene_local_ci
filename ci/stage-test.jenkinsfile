stage('test') {
    if (env.build_type == "manual") {
        try {
            timeout(time: 15, unit: 'MINUTES') {
                sh '''
                    if test -n "$SGX"
                    then
                        graphene=sgx
                    else
                        graphene=direct
                    fi

                    cd Pal/regression
                    make ${MAKEOPTS} all pal_lib="$GRAPHENE_PKGLIBDIR"/"$graphene"/libpal.so
                    if test -n "$SGX"
                    then
                        make ${MAKEOPTS} sgx-tokens pal_lib="$GRAPHENE_PKGLIBDIR"/"$graphene"/libpal.so
                    fi
                    python3 -m pytest -v --junit-xml pal-regression.xml test_pal.py
                '''
            }
        } catch (Exception e){
            env.build_ok = false
            sh 'echo "PAL Test Failed"'
        } finally {
            junit 'Pal/regression/pal-regression.xml'
        }

        try {
            timeout(time: 15, unit: 'MINUTES') {

                sh '''
                    cd LibOS/shim/test/regression
                    make ${MAKEOPTS} RA_CLIENT_SPID=${ra_client_spid} all
                    if test -n "$SGX"
                    then
                        make ${MAKEOPTS} RA_CLIENT_SPID=${ra_client_spid} sgx-tokens
                    fi
                '''
                if (env.node_label == "graphene_dcap") {
                    sh '''
                        cd LibOS/shim/test/regression
                        python3 -m pytest -v --junit-xml libos-regression.xml test_libos.py
                    '''
                } else {
                     sh '''
                        cd LibOS/shim/test/regression
                        python3 -m pytest -v -k "not attestation" --junit-xml libos-regression.xml test_libos.py
                    '''
                }
            }
        } catch (Exception e){
            env.build_ok = false
            sh 'echo "LibOS Test Failed"'
        } finally {
            junit 'LibOS/shim/test/regression/libos-regression.xml'
        }

        try {
            timeout(time: 15, unit: 'MINUTES') {
                sh '''
                    cd LibOS/shim/test/fs
                    make ${MAKEOPTS} all
                    if test -n "$SGX"
                    then
                        make ${MAKEOPTS} sgx-tokens
                    fi
                    python3 -m pytest -v --junit-xml fs.xml test_fs.py test_tmpfs.py test_pf.py
                '''
            }
        } catch (Exception e){
            env.build_ok = false
            sh 'echo "LibOS Test Failed"'
        } finally {
            junit 'LibOS/shim/test/fs/*.xml'
        }
    }
}
