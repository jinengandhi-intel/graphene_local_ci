
node (node_label) {
    env.ORIG_WKSP = env.WORKSPACE
    env.build_ok = true
    env.AVX = '1'
    currentBuild.description = "distro : " + base_os
    try {
        checkout scm
        load 'ci/lib/stage-clone.jenkinsfile'

        dir ("gramine") {
            env.SGX = '1'
            sh '../ci/resources/setup_workspace.sh'
            env.WORKSPACE = env.WORKSPACE + "/gramine"

            build_str = " "
            if (base_os == "rhel9") {
                withCredentials([usernamePassword(credentialsId: 'rhel_dev', usernameVariable: 'USER', passwordVariable: 'PASSWD')]) {
                    build_str = "--build-arg RHEL_USER=$USER \
					--build-arg RHEL_PASSWD=$PASSWD"
                }
            }

            load '../ci/config/config-docker.jenkinsfile'

            docker.build(
                "local:${env.BUILD_TAG}",
                "${build_str} -f ../ci/dockerfile/${base_os}.dockerfile ."
            ).inside("${env.DOCKER_ARGS_COMMON} ${env.DOCKER_ARGS_SGX}") {
                load '.ci/lib/config.jenkinsfile'

                switch(env.os_release_id) {
                    case ['centos', 'almalinux', 'rockylinux', 'rhel']:
                        load '../ci/config/config-centos8.jenkinsfile'
                        break
                    case ['alpine']:
                        load '../ci/config/config-alpine.jenkinsfile'
                        break
                    case ['debian']:
                        load '../ci/config/config-debian.jenkinsfile'
                        break
                }

                load '.ci/lib/config-release.jenkinsfile'

                load '../ci/lib/stage-build-sgx.jenkinsfile'
                if (env.stress_ng_run == "False") {
                    load '../ci/lib/stage-test.jenkinsfile'
                    load '../ci/lib/stage-test-sgx.jenkinsfile'
                    load '../ci/lib/stage-test-examples.jenkinsfile'
                    load '../ci/lib/stage-verification-examples.jenkinsfile'
                } else {
                    load '../ci/lib/stage-test-stress-ng.jenkinsfile'
                }
            }
        }
    } finally {
        stage('cleanup'){
            sh 'rm -rf $ORIG_WKSP/*'
            sh "docker rmi local:${env.BUILD_TAG} -f"
        }
    }

    if(env.build_ok) {
        currentBuild.result = "SUCCESS"
    } else {
        currentBuild.result = "FAILURE"
    }
}
